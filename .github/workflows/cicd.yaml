name: CI/CD Workflow

on:
  push:
    tags:
      - "*"
    branches:
      - develop
      - main
      - release/*
      - hotfix/*
      - 'refs/tags/v*'
  pull_request:
    branches:
      - develop
      - main
      - release/*
      - hotfix/*
      - 'refs/tags/v*'

jobs:
  mod:
    runs-on: ubuntu-latest
    name: Check modules
    steps:
    - uses: actions/setup-go@v5
      with:
        go-version: '1.22.0'
        cache: false
    - uses: actions/checkout@v4
    - run: go mod tidy && git diff --exit-code go.mod go.sum
  test:
    outputs:
      outcome: ${{ steps.test_step.outputs.outcome }}
    needs: mod
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.22.0
      uses: actions/setup-go@v5
      with:
        go-version: '1.22.0'
        cache: false
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run go vet
      run: go vet ./...
    - name: Setup test env
      run: make envtest
    - name: Run tests
      id: test_step
      run: |
        make test
        echo "outcome=$?" >> $GITHUB_OUTPUT
  build-and-push-develop:
    needs: test
    if: github.ref == 'refs/heads/develop' && needs.test.outputs.outcome == '0'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build Image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: polimorph-operator
        tags: latest ${{ github.ref_name }}
        containerfiles: |
          ./Dockerfile
    - name: Push To quay.io
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: quay.io/twistedsolutions
        username: twistedsolutions+github
        password: ${{ secrets.REGISTRY_PASSWORD }}
  release:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v') && needs.test.outputs.outcome == '0'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Build Image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: polimorph-operator
        tags: latest ${{ env.RELEASE_VERSION }}
        containerfiles: |
          ./Dockerfile
    - name: Push To quay.io
      id: push-to-quay
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: quay.io/twistedsolutions
        username: twistedsolutions+github
        password: ${{ secrets.REGISTRY_PASSWORD }}